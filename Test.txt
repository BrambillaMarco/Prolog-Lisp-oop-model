def_class(person, [], [field(name, "Eve"), field(age, 21, integer)]).

def_class(student, [person],[field(name, "Eva Lu Ator"),field(university, "Berkeley"),method(talk, [],(write("My name is "),field(this, name, N),writeln(N),write("My age is "),field(this, age, A),writeln(A)))]).

make(eve, person).

WAIT - make(paolo, person, [student = collega]).

make(adam, person, [name = "Adam"]).

make(s1, student, [name = "Eduardo De Filippo", age = 108]).

make(s2, student).

make(s3, student, [name = "Harry Potter", age = "12"]).

field(eve, age, A).

field(s1, age, A).

field(s2, name, N).

field(eve, address, Address).

talk(s1).

inst(s1, X), talk(X).

talk(eve).

def_class(studente_bicocca, [student], [method(talk, [], (write("Mi chiamo "), field(this, name, N), writeln(N), writeln("e studio alla Bicocca."))), method(to_string, [ResultingString], (with_output_to(string(ResultingString), (field(this, name, N), field(this, university, U), format("#<~w Student ~w>", [U, N]))))), field(university, "UNIMIB")]).

make(ernesto, studente_bicocca, [name = "Ernesto"]).

talk(ernesto).

to_string(ernesto, S).

is_class(person).

is_class(pippo).

is_instance(eve).

is_instance(pippofranco).

is_instance(eve, person).

inst(eve, Instance).

inst(pippofranco, Instance).

fieldx(s1, [name, age], Fields).

